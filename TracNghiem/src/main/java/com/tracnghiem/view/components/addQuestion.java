/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.tracnghiem.view.components;

import com.formdev.flatlaf.FlatClientProperties;
import com.formdev.flatlaf.extras.FlatSVGIcon;
import com.tracnghiem.bus.AnswerBUS;
import com.tracnghiem.bus.QuestionBUS;
import com.tracnghiem.bus.TopicBUS;
import com.tracnghiem.dto.AnswerDTO;
import com.tracnghiem.dto.QuestionDTO;
import com.tracnghiem.dto.TopicDTO;
import com.tracnghiem.utils.UploadUtil;
import java.awt.BorderLayout;
import java.awt.Image;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import javax.swing.ButtonGroup;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import java.io.File;
import java.io.FileInputStream;
import java.util.Iterator;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author huulu
 */
public class addQuestion extends javax.swing.JPanel {

    private final QuestionBUS qBUS = new QuestionBUS();
    private final TopicBUS tBUS = new TopicBUS();
    private final AnswerBUS aBUS = new AnswerBUS();
    private String qLevel = "--none--";
    private final Map<String, Integer> topicMapParent = new LinkedHashMap<>();
    private final Map<String, Integer> topicMapChildren = new LinkedHashMap<>();
    private final Map<String, Integer> topicMapChildren1 = new LinkedHashMap<>();
    private int tIDSelected = -1;
    private int newQID = -1;
    private final ArrayList<File> listImg = new ArrayList<>();
    private final ArrayList<JTextArea> listTextArea = new ArrayList<>();
    private final ArrayList<JRadioButton> listRBTn = new ArrayList<>();
    private final ArrayList<JLabel> listLabel = new ArrayList<>();
    private QuestionDTO q;
    private ArrayList<AnswerDTO> listA = new ArrayList<>();

    /**
     * Creates new form addQuestion
     */
    public addQuestion(QuestionDTO question, boolean update) {
        initComponents();
        ButtonGroup group = new ButtonGroup();
        selectedButton(group);

        listTextArea.add(dapanA);
        listTextArea.add(dapanB);
        listTextArea.add(dapanC);
        listTextArea.add(dapanD);
        listTextArea.add(dapanE);

        listRBTn.add(rbtnA);
        listRBTn.add(rbtnB);
        listRBTn.add(rbtnC);
        listRBTn.add(rbtnD);
        listRBTn.add(rbtnE);

        listLabel.add(hinhA);
        listLabel.add(hinhB);
        listLabel.add(hinhC);
        listLabel.add(hinhD);
        listLabel.add(hinhE);

        loadTpParent(tBUS.getAllParent());
        newQID = qBUS.getMaxID() + 1;
        macauhoi.setText(newQID + "");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        luu = new javax.swing.JButton();
        nhap_excel = new javax.swing.JButton();
        monhocCBB = new javax.swing.JComboBox<>();
        chudeCBB = new javax.swing.JComboBox<>();
        baihocCBB = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        macauhoi = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        noidung = new javax.swing.JTextArea();
        anh = new javax.swing.JPanel();
        qAnh = new javax.swing.JLabel();
        tenhinh = new javax.swing.JLabel();
        cbbLevel = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        panelA = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        dapanA = new javax.swing.JTextArea();
        jButton7 = new javax.swing.JButton();
        rbtnA = new javax.swing.JRadioButton();
        hinhA = new javax.swing.JLabel();
        panelB = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        dapanB = new javax.swing.JTextArea();
        jButton8 = new javax.swing.JButton();
        rbtnB = new javax.swing.JRadioButton();
        hinhB = new javax.swing.JLabel();
        panelC = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        dapanC = new javax.swing.JTextArea();
        jButton9 = new javax.swing.JButton();
        rbtnC = new javax.swing.JRadioButton();
        hinhC = new javax.swing.JLabel();
        panelD = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        dapanD = new javax.swing.JTextArea();
        jButton10 = new javax.swing.JButton();
        rbtnD = new javax.swing.JRadioButton();
        hinhD = new javax.swing.JLabel();
        panelE = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        dapanE = new javax.swing.JTextArea();
        jButton11 = new javax.swing.JButton();
        rbtnE = new javax.swing.JRadioButton();
        hinhE = new javax.swing.JLabel();

        jPanel1.putClientProperty(FlatClientProperties.STYLE, "arc: 10; background: #ffffff");

        luu.putClientProperty(FlatClientProperties.STYLE, "arc: 10; background: #0bae1d; foreground: #ffffff;");
        luu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        luu.setIcon(new FlatSVGIcon("icons/save.svg", 30, 30)
        );
        luu.setText("Lưu");
        luu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        luu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                luuActionPerformed(evt);
            }
        });

        nhap_excel.putClientProperty(FlatClientProperties.STYLE, "arc: 10; background: #3276c3; foreground: #ffffff;");
        nhap_excel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        nhap_excel.setIcon(new FlatSVGIcon("icons/excel.svg", 30, 30)
        );
        nhap_excel.setText("Nhập từ Excel");
        nhap_excel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        nhap_excel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nhap_excelActionPerformed(evt);
            }
        });

        monhocCBB.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Danh sách môn học");
        monhocCBB.setToolTipText("");
        monhocCBB.setName(""); // NOI18N
        monhocCBB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monhocCBBActionPerformed(evt);
            }
        });

        chudeCBB.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Danh sách chủ đề");
        chudeCBB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chudeCBBActionPerformed(evt);
            }
        });

        baihocCBB.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Danh sách bài học");
        baihocCBB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                baihocCBBActionPerformed(evt);
            }
        });

        jLabel1.setText("Môn học");

        jLabel2.setText("Chủ đề");

        jLabel3.setText("Bài học");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(monhocCBB, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chudeCBB, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(luu)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nhap_excel))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(baihocCBB, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(nhap_excel)
                        .addComponent(luu))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)
                        .addComponent(jLabel3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(monhocCBB, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chudeCBB, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(baihocCBB, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        chudeCBB.addItem("--None--");
        chudeCBB.setSelectedIndex(0);
        baihocCBB.addItem("--None--");

        jPanel2.putClientProperty(FlatClientProperties.STYLE, "arc: 10; background: #ffffff");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel5.setText("Mã câu hỏi:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel4.setText("Nội dung câu hỏi:");

        jButton6.putClientProperty(FlatClientProperties.STYLE, "arc: 10; background: #3276c3; foreground: #ffffff;");
        jButton6.setIcon(new FlatSVGIcon("icons/img-upload.svg", 20, 20)
        );
        jButton6.setText("Chọn Ảnh");
        jButton6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        macauhoi.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        macauhoi.setText("NULL");

        noidung.setColumns(20);
        noidung.setRows(5);
        jScrollPane1.setViewportView(noidung);

        javax.swing.GroupLayout anhLayout = new javax.swing.GroupLayout(anh);
        anh.setLayout(anhLayout);
        anhLayout.setHorizontalGroup(
            anhLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(qAnh, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
        );
        anhLayout.setVerticalGroup(
            anhLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(qAnh, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
        );

        tenhinh.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        tenhinh.setText("NULL");
        tenhinh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tenhinhMouseClicked(evt);
            }
        });

        cbbLevel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cbbLevel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--None--", "Easy", "Medium", "Diff" }));
        cbbLevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbLevelActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel6.setText("Độ khó:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(macauhoi)))
                        .addGap(78, 78, 78)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(cbbLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tenhinh, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton6)))))
                .addGap(18, 18, 18)
                .addComponent(anh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(anh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel5)
                                .addComponent(macauhoi))
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jButton6)
                            .addComponent(tenhinh)
                            .addComponent(cbbLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );

        tenhinh.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jPanel3.putClientProperty(FlatClientProperties.STYLE, "arc: 10; background: #ffffff");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel11.setText("Đáp án:");

        panelA.putClientProperty(FlatClientProperties.STYLE, "arc: 10;");
        panelA.setPreferredSize(new java.awt.Dimension(810, 60));
        panelA.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setText("Câu A:");
        panelA.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 2, -1, -1));

        dapanA.setColumns(20);
        dapanA.setRows(5);
        jScrollPane2.setViewportView(dapanA);

        panelA.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 21, 540, 36));

        jButton7.putClientProperty(FlatClientProperties.STYLE, "arc: 10; background: #3276c3; foreground: #ffffff;");
        jButton7.setIcon(new FlatSVGIcon("icons/img-upload.svg", 20, 20)
        );
        jButton7.setText("Chọn Ảnh");
        jButton7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        panelA.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(824, 34, -1, -1));

        rbtnA.setText("Đáp án đúng");
        rbtnA.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rbtnA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnAActionPerformed(evt);
            }
        });
        panelA.add(rbtnA, new org.netbeans.lib.awtextra.AbsoluteConstraints(48, 1, -1, -1));

        hinhA.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        hinhA.setText("NULL");
        hinhA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hinhAMouseClicked(evt);
            }
        });
        panelA.add(hinhA, new org.netbeans.lib.awtextra.AbsoluteConstraints(552, 40, 252, -1));
        hinhA.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        panelB.putClientProperty(FlatClientProperties.STYLE, "arc: 10;");
        panelB.setPreferredSize(new java.awt.Dimension(810, 60));
        panelB.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel12.setText("Câu B:");
        panelB.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 2, -1, -1));

        dapanB.setColumns(20);
        dapanB.setRows(5);
        jScrollPane3.setViewportView(dapanB);

        panelB.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 21, 540, 36));

        jButton8.putClientProperty(FlatClientProperties.STYLE, "arc: 10; background: #3276c3; foreground: #ffffff;");
        jButton8.setIcon(new FlatSVGIcon("icons/img-upload.svg", 20, 20)
        );
        jButton8.setText("Chọn Ảnh");
        jButton8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        panelB.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(824, 34, -1, -1));

        rbtnB.setText("Đáp án đúng");
        rbtnB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rbtnB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnBActionPerformed(evt);
            }
        });
        panelB.add(rbtnB, new org.netbeans.lib.awtextra.AbsoluteConstraints(48, 1, -1, -1));

        hinhB.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        hinhB.setText("NULL");
        hinhB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hinhBMouseClicked(evt);
            }
        });
        panelB.add(hinhB, new org.netbeans.lib.awtextra.AbsoluteConstraints(552, 40, 252, -1));
        hinhB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        panelC.putClientProperty(FlatClientProperties.STYLE, "arc: 10;");
        panelC.setPreferredSize(new java.awt.Dimension(810, 60));
        panelC.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel13.setText("Câu C:");
        panelC.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 2, -1, -1));

        dapanC.setColumns(20);
        dapanC.setRows(5);
        jScrollPane4.setViewportView(dapanC);

        panelC.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 21, 540, 36));

        jButton9.putClientProperty(FlatClientProperties.STYLE, "arc: 10; background: #3276c3; foreground: #ffffff;");
        jButton9.setIcon(new FlatSVGIcon("icons/img-upload.svg", 20, 20)
        );
        jButton9.setText("Chọn Ảnh");
        jButton9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        panelC.add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(824, 34, -1, -1));

        rbtnC.setText("Đáp án đúng");
        rbtnC.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rbtnC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnCActionPerformed(evt);
            }
        });
        panelC.add(rbtnC, new org.netbeans.lib.awtextra.AbsoluteConstraints(48, 1, -1, -1));

        hinhC.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        hinhC.setText("NULL");
        hinhC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hinhCMouseClicked(evt);
            }
        });
        panelC.add(hinhC, new org.netbeans.lib.awtextra.AbsoluteConstraints(552, 40, 252, -1));
        hinhC.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        panelD.putClientProperty(FlatClientProperties.STYLE, "arc: 10;");
        panelD.setPreferredSize(new java.awt.Dimension(810, 60));
        panelD.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel14.setText("Câu D:");
        panelD.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 2, -1, -1));

        dapanD.setColumns(20);
        dapanD.setRows(5);
        jScrollPane5.setViewportView(dapanD);

        panelD.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 21, 540, 36));

        jButton10.putClientProperty(FlatClientProperties.STYLE, "arc: 10; background: #3276c3; foreground: #ffffff;");
        jButton10.setIcon(new FlatSVGIcon("icons/img-upload.svg", 20, 20)
        );
        jButton10.setText("Chọn Ảnh");
        jButton10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        panelD.add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(824, 34, -1, -1));

        rbtnD.setText("Đáp án đúng");
        rbtnD.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rbtnD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnDActionPerformed(evt);
            }
        });
        panelD.add(rbtnD, new org.netbeans.lib.awtextra.AbsoluteConstraints(48, 1, -1, -1));

        hinhD.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        hinhD.setText("NULL");
        hinhD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hinhDMouseClicked(evt);
            }
        });
        panelD.add(hinhD, new org.netbeans.lib.awtextra.AbsoluteConstraints(552, 40, 252, -1));
        hinhD.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        panelE.putClientProperty(FlatClientProperties.STYLE, "arc: 10;");
        panelE.setPreferredSize(new java.awt.Dimension(810, 60));
        panelE.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel15.setText("Câu E:");
        panelE.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 2, -1, -1));

        dapanE.setColumns(20);
        dapanE.setRows(5);
        jScrollPane6.setViewportView(dapanE);

        panelE.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 21, 540, 36));

        jButton11.putClientProperty(FlatClientProperties.STYLE, "arc: 10; background: #3276c3; foreground: #ffffff;");
        jButton11.setIcon(new FlatSVGIcon("icons/img-upload.svg", 20, 20)
        );
        jButton11.setText("Chọn Ảnh");
        jButton11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        panelE.add(jButton11, new org.netbeans.lib.awtextra.AbsoluteConstraints(824, 34, -1, -1));

        rbtnE.setText("Đáp án đúng");
        rbtnE.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rbtnE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnEActionPerformed(evt);
            }
        });
        panelE.add(rbtnE, new org.netbeans.lib.awtextra.AbsoluteConstraints(48, 1, -1, -1));

        hinhE.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        hinhE.setText("NULL");
        hinhE.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hinhEMouseClicked(evt);
            }
        });
        panelE.add(hinhE, new org.netbeans.lib.awtextra.AbsoluteConstraints(552, 40, 252, -1));
        hinhE.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(panelB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void selectedButton(ButtonGroup buttonGroup) {
        // Danh sách các JRadioButton
        List<JRadioButton> radioButtons = Arrays.asList(rbtnA, rbtnB, rbtnC, rbtnD, rbtnE);

        // Danh sách các JPanel tương ứng (panelA, panelB, panelC, panelD, panelE)
        List<JPanel> panels = Arrays.asList(panelA, panelB, panelC, panelD, panelE);

        // Map để liên kết RadioButton với Panel tương ứng
        Map<JRadioButton, JPanel> panelMap = new HashMap<>();

        for (int i = 0; i < radioButtons.size(); i++) {
            JRadioButton radioButton = radioButtons.get(i);
            JPanel panel = panels.get(i);

            buttonGroup.add(radioButton);
            panelMap.put(radioButton, panel);

            // Bắt sự kiện khi chọn radio button
            radioButton.addActionListener(e -> {
                resetPanelColors(panels);  // Đặt lại màu tất cả panel trước khi đổi màu
                panel.putClientProperty(FlatClientProperties.STYLE, "arc: 10; background: #aaf697;"); // Đổi màu panel tương ứng
            });
        }
    }

    // Hàm đặt lại màu tất cả các panel về mặc định
    private void resetPanelColors(List<JPanel> panels) {
        for (JPanel panel : panels) {
            panel.putClientProperty(FlatClientProperties.STYLE, "arc: 10;");
        }
    }

    private void loadTpParent(ArrayList<TopicDTO> list) {
        topicMapParent.clear();
        topicMapParent.put("--None--", -1);

        for (TopicDTO t : list) {
            topicMapParent.put(t.getTpTitle(), t.getTpID());
        }

        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();

        for (String s : topicMapParent.keySet()) {
            model.addElement(s);
        }
        monhocCBB.setModel(model);

    }

    private void loadTpChild1(int idParent) {
        topicMapChildren1.clear();
        topicMapChildren1.put("--None--", -1);

        if (idParent != -1) {
            ArrayList<TopicDTO> list = tBUS.getChildTopics(idParent);

            for (TopicDTO t : list) {
                topicMapChildren1.put(t.getTpTitle(), t.getTpID());
            }
        }

        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        for (String s : topicMapChildren1.keySet()) {
            model.addElement(s);
        }
        baihocCBB.setModel(model);
    }

    private void loadTpChild(int idParent) {
        topicMapChildren.clear();
        topicMapChildren.put("--None--", -1);

        if (idParent != -1) {
            ArrayList<TopicDTO> list = tBUS.getChildTopics(idParent);

            for (TopicDTO t : list) {
                topicMapChildren.put(t.getTpTitle(), t.getTpID());
            }
        }

        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        for (String s : topicMapChildren.keySet()) {
            model.addElement(s);
        }
        chudeCBB.setModel(model);
    }

    private void updateAction(QuestionDTO questionDTO) {

    }

    private void baihocCBBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_baihocCBBActionPerformed
        // TODO add your handling code here:
        String selectedTopic = (String) baihocCBB.getSelectedItem();
        Integer selectedID = topicMapChildren1.get(selectedTopic);
        // Kiểm tra nếu selectedID là null thì không làm gì cả
        if (selectedID == null || selectedID == -1) {
            return;
        }
        tIDSelected = selectedID;

    }//GEN-LAST:event_baihocCBBActionPerformed

    private void loadPrevImage(String filePath) {
        ImageIcon icon = new ImageIcon(filePath);
        Image image = icon.getImage().getScaledInstance(190, 180, Image.SCALE_SMOOTH);
        qAnh.setIcon(new ImageIcon(image));
        qAnh.setText(""); // Xóa text mặc định
    }

    private String uploadImg() {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Chọn ảnh từ máy");

        // Chỉ cho phép chọn file ảnh (JPG, PNG, GIF)
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Hình ảnh (JPG, PNG, GIF)", "jpg", "png", "gif");
        fileChooser.setFileFilter(filter);

        int result = fileChooser.showOpenDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {

            File selectedFile = fileChooser.getSelectedFile();
            String fileName = selectedFile.getName(); // Lấy tên file
            String filePath = selectedFile.getAbsolutePath(); // Lấy đường dẫn đầy đủ của ảnh

            for (File file : listImg) {
                if (file.getName().equals(fileName)) {
                    JOptionPane.showMessageDialog(null, "Chọn trùng tên hình!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                    return "Chưa chọn ảnh";
                }
            }
            listImg.add(selectedFile);
            // Load ảnh vào JLabel
            loadPrevImage(filePath);
            return fileName;
        } else {
            JOptionPane.showMessageDialog(null, "Chưa chọn file!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return "Chưa chọn ảnh";
        }
    }


    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        String img = uploadImg();
        tenhinh.setText(img);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        String img = uploadImg();
        hinhA.setText(img);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void rbtnAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtnAActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        String img = uploadImg();
        hinhB.setText(img);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void rbtnBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtnBActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        String img = uploadImg();
        hinhC.setText(img);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void rbtnCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtnCActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        String img = uploadImg();
        hinhD.setText(img);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void rbtnDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtnDActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        String img = uploadImg();
        hinhE.setText(img);
    }//GEN-LAST:event_jButton11ActionPerformed

    private void rbtnEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnEActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtnEActionPerformed

    private void cbbLevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbLevelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbLevelActionPerformed

    private void monhocCBBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monhocCBBActionPerformed
        // TODO add your handling code here:
        String selectedTopic = (String) monhocCBB.getSelectedItem();
        Integer selectedID = topicMapParent.get(selectedTopic);
        // Kiểm tra nếu selectedID là null thì không làm gì cả
        if (selectedID == null || selectedID == -1) {
            return;
        }
        tIDSelected = selectedID;
        loadTpChild(selectedID);
        chudeCBB.setSelectedIndex(0);
        baihocCBB.setSelectedIndex(0);
    }//GEN-LAST:event_monhocCBBActionPerformed

    private void chudeCBBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chudeCBBActionPerformed
        // TODO add your handling code here:
        String selectedTopic = (String) chudeCBB.getSelectedItem();
        Integer selectedID = topicMapChildren.get(selectedTopic);
        // Kiểm tra nếu selectedID là null thì không làm gì cả
        if (selectedID == null || selectedID == -1) {
            return;
        }
        tIDSelected = selectedID;
        loadTpChild1(selectedID);
        baihocCBB.setSelectedIndex(0);
    }//GEN-LAST:event_chudeCBBActionPerformed
    private boolean validDataAddNew() {
        if (tIDSelected == -1) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn môn học/chủ đề/bài học!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (cbbLevel.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn mức độ!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        if (noidung.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập nội dung câu hỏi!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        int d = 0;
        for (JTextArea t : listTextArea) {
            if (!t.getText().isEmpty()) {
                d++;
            }
        }
        if (d < 2) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập ít nhất 2 đáp án!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        boolean check = false;
        for (JRadioButton rb : listRBTn) {
            if (rb.isSelected()) {
                check = true;
                break;
            }
        }
        if (!check) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn 1 đáp án đúng!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        //
        if (qBUS.isExist(noidung.getText().trim(), tIDSelected)) {
            JOptionPane.showMessageDialog(null, "Nội dung câu hỏi đã tồn tại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        return true;
    }

    private void buildDataQuestion() {

        //Question        
        int newQTopicID = tIDSelected;
        String newQContent = noidung.getText();
        String newQPicture = tenhinh.getText();
        String newQLevel = (String) cbbLevel.getSelectedItem();
        int newQStatus = 1;

        q = new QuestionDTO(newQContent, newQPicture, newQTopicID, newQLevel, newQStatus);

        //Answer
        String newAwContent;
        String newAwPicture;
        boolean newAwIsRight;
        int newAwStatus = 1;

        for (int i = 0; i < listTextArea.size(); i++) {
            if (!listTextArea.get(i).getText().isEmpty()) {
                newAwContent = listTextArea.get(i).getText();
                newAwPicture = listLabel.get(i).getText();

                if (newAwPicture.equals("NULL") || newAwPicture.equals("Chưa chọn ảnh")) {
                    newAwPicture = "";
                }

                newAwIsRight = listRBTn.get(i).isSelected();

                AnswerDTO a = new AnswerDTO(newQID, newAwContent, newAwPicture, newAwIsRight, newAwStatus);
                listA.add(a);
            }
        }

    }

    private void loadPrevByNameImg(JLabel jblNameImg) {
        String nameImg = jblNameImg.getText();
        if (nameImg.isEmpty() || nameImg.equals("NULL") || nameImg.equals("Chưa chọn ảnh")) {
            JOptionPane.showMessageDialog(null, "Hình ảnh không tồn tại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        for (int i = 0; i < listImg.size(); i++) {
            if (listImg.get(i).getName().equals(nameImg)) {
                loadPrevImage(listImg.get(i).getAbsolutePath());
            }
        }
    }

    private void tenhinhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tenhinhMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            loadPrevByNameImg(tenhinh);
        }
    }//GEN-LAST:event_tenhinhMouseClicked


    private void hinhAMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hinhAMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            loadPrevByNameImg(hinhA);
        }
    }//GEN-LAST:event_hinhAMouseClicked

    private void hinhBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hinhBMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            loadPrevByNameImg(hinhB);
        }
    }//GEN-LAST:event_hinhBMouseClicked

    private void hinhCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hinhCMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            loadPrevByNameImg(hinhC);
        }
    }//GEN-LAST:event_hinhCMouseClicked

    private void hinhDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hinhDMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            loadPrevByNameImg(hinhD);
        }
    }//GEN-LAST:event_hinhDMouseClicked

    private void hinhEMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hinhEMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
            loadPrevByNameImg(hinhE);
        }
    }//GEN-LAST:event_hinhEMouseClicked

    public void importFromExcel(File file) {
        try (FileInputStream fis = new FileInputStream(file); Workbook workbook = new XSSFWorkbook(fis)) {

            Sheet sheet = workbook.getSheetAt(0);
            Iterator<Row> rowIterator = sheet.iterator();
            HashMap<String, ArrayList<AnswerDTO>> answerMap = new HashMap<>();
            ArrayList<QuestionDTO> questionList = new ArrayList<>();

            while (rowIterator.hasNext()) {
                Row row = rowIterator.next();
                if (row.getRowNum() == 0) {
                    continue; // Bỏ qua tiêu đề
                }
                try {
                    // Đọc dữ liệu câu hỏi
                    String eqContent = row.getCell(0).getStringCellValue().trim();
                    String eqPictures = row.getCell(1).getStringCellValue().trim();
                    int eqTopic = (int) row.getCell(2).getNumericCellValue();
                    String eqLevel = row.getCell(3).getStringCellValue().trim();
                    int eqStatus = (int) row.getCell(4).getNumericCellValue();

                    // Đọc dữ liệu đáp án
                    String awContent = row.getCell(5).getStringCellValue().trim();
                    String awPicture = row.getCell(6).getStringCellValue().trim();
                    boolean isRight = row.getCell(7).getBooleanCellValue();
                    int awStatus = (int) row.getCell(8).getNumericCellValue();

                    boolean isNewQuestion = !answerMap.containsKey(eqContent);

                    if (isNewQuestion) {
                        // Chỉ tăng newQID khi gặp câu hỏi mới (bỏ qua lần đầu tiên)
                        if (!questionList.isEmpty()) {
                            newQID++;
                        }

                        // Tạo câu hỏi mới và thêm vào danh sách
                        QuestionDTO question = new QuestionDTO(newQID, eqContent, eqPictures, eqTopic, eqLevel, eqStatus);
                        questionList.add(question);
                    }
                    // Luôn thêm đáp án vào câu hỏi tương ứng
                    AnswerDTO answer = new AnswerDTO(newQID, awContent, awPicture, isRight, awStatus);
                    answerMap.putIfAbsent(eqContent, new ArrayList<>());
                    answerMap.get(eqContent).add(answer);

                } catch (Exception e) {
                    System.err.println("Lỗi tại dòng " + row.getRowNum() + ": " + e.getMessage());
                }

            }

            showCustomDialog(null, new previewAddQuestion(questionList, answerMap), "Xem trước");

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Lỗi khi đọc file Excel!", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void handleAddNewQuestion() {
        if (!validDataAddNew()) {
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(
                null, "Bạn có muốn lưu dữ liệu không?", "Xác nhận lưu",
                JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE
        );

        if (confirm == JOptionPane.YES_OPTION) {

            buildDataQuestion();

            //goi insert
            if (!qBUS.add(q)) {
                JOptionPane.showMessageDialog(null, "Lưu câu hỏi thất bại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }
            for (AnswerDTO a : listA) {
                if (!aBUS.add(a)) {
                    JOptionPane.showMessageDialog(null, "Lưu đáp án thất bại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }

            for (File file : listImg) {
                if (!UploadUtil.uploadToResources(file)) {
                    JOptionPane.showMessageDialog(null, "Lưu đáp án thất bại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }

            JOptionPane.showMessageDialog(null, "Lưu câu hỏi và đáp án thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            // Đóng dialog sau khi lưu thành công
            java.awt.Window window = SwingUtilities.getWindowAncestor(this);
            if (window instanceof JDialog) {
                ((JDialog) window).dispose();
            }
        }
    }

    private void luuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_luuActionPerformed
        // TODO add your handling code here:
        handleAddNewQuestion();
    }//GEN-LAST:event_luuActionPerformed

    
    private void nhap_excelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nhap_excelActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        int result = fileChooser.showOpenDialog(null);

        if (result == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            importFromExcel(file);

        }
    }//GEN-LAST:event_nhap_excelActionPerformed

    private static void showCustomDialog(JFrame parent, JPanel panel, String title) {
        JDialog dialog = new JDialog(parent, title, true);
        dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);

        // Thêm panel vào dialog
        dialog.setLayout(new BorderLayout());
        dialog.add(panel, BorderLayout.CENTER);

        // Định kích thước dialog
        dialog.pack();
        dialog.setLocationRelativeTo(parent);
        dialog.setVisible(true);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel anh;
    private javax.swing.JComboBox<String> baihocCBB;
    private javax.swing.JComboBox<String> cbbLevel;
    private javax.swing.JComboBox<String> chudeCBB;
    private javax.swing.JTextArea dapanA;
    private javax.swing.JTextArea dapanB;
    private javax.swing.JTextArea dapanC;
    private javax.swing.JTextArea dapanD;
    private javax.swing.JTextArea dapanE;
    private javax.swing.JLabel hinhA;
    private javax.swing.JLabel hinhB;
    private javax.swing.JLabel hinhC;
    private javax.swing.JLabel hinhD;
    private javax.swing.JLabel hinhE;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JButton luu;
    private javax.swing.JLabel macauhoi;
    private javax.swing.JComboBox<String> monhocCBB;
    private javax.swing.JButton nhap_excel;
    private javax.swing.JTextArea noidung;
    private javax.swing.JPanel panelA;
    private javax.swing.JPanel panelB;
    private javax.swing.JPanel panelC;
    private javax.swing.JPanel panelD;
    private javax.swing.JPanel panelE;
    private javax.swing.JLabel qAnh;
    private javax.swing.JRadioButton rbtnA;
    private javax.swing.JRadioButton rbtnB;
    private javax.swing.JRadioButton rbtnC;
    private javax.swing.JRadioButton rbtnD;
    private javax.swing.JRadioButton rbtnE;
    private javax.swing.JLabel tenhinh;
    // End of variables declaration//GEN-END:variables
}
