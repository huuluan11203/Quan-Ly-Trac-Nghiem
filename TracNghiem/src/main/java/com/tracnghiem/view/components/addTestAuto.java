/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.tracnghiem.view.components;

import com.formdev.flatlaf.FlatClientProperties;
import com.formdev.flatlaf.extras.FlatSVGIcon;
import com.tracnghiem.bus.ExamBUS;
import com.tracnghiem.bus.QuestionBUS;
import com.tracnghiem.bus.TestBUS;
import com.tracnghiem.bus.TopicBUS;
import com.tracnghiem.dto.QuestionDTO;
import com.tracnghiem.dto.TestDTO;
import com.tracnghiem.dto.TopicDTO;
import com.tracnghiem.view.mainView;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.JTextField;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.AbstractDocument;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DocumentFilter;
import javax.swing.text.NumberFormatter;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author huulu
 */
public class addTestAuto extends javax.swing.JPanel {

    private final Map<String, Integer> topicMapParent = new LinkedHashMap<>();
    private final Map<String, Integer> topicMapChildren = new LinkedHashMap<>();
    private final TopicBUS tpBUS = new TopicBUS();
    private final QuestionBUS qBUS = new QuestionBUS();
    private final ExamBUS eBUS = new ExamBUS();
    private final TestBUS tBUS = new TestBUS();
    private ArrayList<QuestionDTO> listQ = new ArrayList<>();
    private int idTopicParent = -1, idTopicChildren = -1, qIDSelected = -1, rowSelected = -1;
    private String qLevel = "--None--";
    private int newTestID = -1;
    private ArrayList<QuestionDTO> listQSelected = new ArrayList<>();
    private LocalDate dateSelected = null;
    private final ArrayList<String> listExOrder = new ArrayList<>(Arrays.asList(
            "A", "B", "C", "D", "E", "F", "G", "H", "I", "J"
    ));

    /**
     * Creates new form addTestAuto
     */
    public addTestAuto(TestDTO test, boolean update) {
        initComponents();
        newTestID = tBUS.getMaxID() + 1;

        jLabel1.setText(newTestID + "");
        
        loadTpParent();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        monhocCBB = new javax.swing.JComboBox<>();
        testTitle = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        testTime = new javax.swing.JTextField();
        time = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        SpinnerNumberModel model = new SpinnerNumberModel(1, 1, Integer.MAX_VALUE, 1);
        testLimit = new javax.swing.JSpinner(model);
        jLabel8 = new javax.swing.JLabel();
        luu = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel15 = new javax.swing.JLabel();
        testCode = new javax.swing.JTextField();
        jButton16 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        SpinnerNumberModel model1 = new SpinnerNumberModel(0, 0, Integer.MAX_VALUE, 1);
        testLimit1 = new javax.swing.JSpinner(model1);
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        SpinnerNumberModel model2 = new SpinnerNumberModel(0, 0, Integer.MAX_VALUE, 1);
        testLimit2 = new javax.swing.JSpinner(model2);
        SpinnerNumberModel model3 = new SpinnerNumberModel(0, 0, Integer.MAX_VALUE, 1);
        testLimit3 = new javax.swing.JSpinner(model3);
        cbb_child = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        luu1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        totalQuestion = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        SpinnerNumberModel model4 = new SpinnerNumberModel(1, 1, 10, 1);
        quantityExams = new javax.swing.JSpinner(model4);
        luu2 = new javax.swing.JButton();

        jPanel3.putClientProperty(FlatClientProperties.STYLE, "arc: 10; background: #ffffff");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel2.setText("Tên bài kiểm tra");

        monhocCBB.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Danh sách môn học");
        monhocCBB.putClientProperty(FlatClientProperties.STYLE, "arc: 10; ");
        monhocCBB.setEditable(true);
        monhocCBB.setToolTipText("");
        monhocCBB.setName(""); // NOI18N
        monhocCBB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monhocCBBActionPerformed(evt);
            }
        });

        testTitle.putClientProperty(FlatClientProperties.STYLE, "arc: 10; ");
        testTitle.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Tên bài kiểm tra");
        testTitle.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel3.setText("Môn học / chủ đề");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel4.setText("Thời gian làm bài");

        testTime.putClientProperty(FlatClientProperties.STYLE, "arc: 10; ");
        testTime.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Thời gian (Phút)");
        testTime.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N

        time.putClientProperty(FlatClientProperties.STYLE, "arc: 10; background: #3276c3; foreground: #ffffff;");
        time.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        time.setIcon(new FlatSVGIcon("icons/time.svg", 30, 30)
        );
        time.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel5.setText("Số lần làm bài");

        testLimit.putClientProperty(FlatClientProperties.STYLE, "arc :10;");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel8.setText("Ngày thi");

        luu.putClientProperty(FlatClientProperties.STYLE, "arc: 10; background: #0bae1d; foreground: #ffffff;");
        luu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        luu.setIcon(new FlatSVGIcon("icons/save.svg", 30, 30)
        );
        luu.setText("Lưu");
        luu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        luu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                luuActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        jLabel14.setText("ID: ");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("NULL");

        jDateChooser1.putClientProperty(FlatClientProperties.STYLE, "arc: 10;");

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel15.setText("Mã bài thi");

        testCode.putClientProperty(FlatClientProperties.STYLE, "arc: 10; ");
        testCode.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Vd(TH01, DE01,...)");
        testCode.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N

        jButton16.putClientProperty(FlatClientProperties.STYLE, "arc: 10; background: #3276c3; foreground: #ffffff;");
        jButton16.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton16.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton16.setIcon(new FlatSVGIcon("icons/unlock.svg", 30, 30));
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(testTitle)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(testCode, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(testTime, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4)
                    .addComponent(monhocCBB, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(luu))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(testLimit, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(jLabel14)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(testTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(monhocCBB, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(luu))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(7, 7, 7)
                        .addComponent(testTime, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(time, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(testLimit, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(testCode, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        // Kích hoạt AutoComplete
        AutoCompleteDecorator.decorate(monhocCBB);
        monhocCBB.setMaximumRowCount(5);
        ((AbstractDocument) testTime.getDocument()).setDocumentFilter(new DocumentFilter() {
            @Override
            public void insertString(FilterBypass fb, int offset, String string, AttributeSet attr)
            throws BadLocationException {
                if (string.matches("\\d+")) { // Chỉ cho phép số
                    super.insertString(fb, offset, string, attr);
                }
            }

            @Override
            public void replace(FilterBypass fb, int offset, int length, String text, AttributeSet attrs)
            throws BadLocationException {
                if (text.matches("\\d+")) { // Chỉ cho phép số
                    super.replace(fb, offset, length, text, attrs);
                }
            }
        });
        // Định dạng lại phần nhập số (loại bỏ dấu phân cách)
        JSpinner.DefaultEditor editor = (JSpinner.DefaultEditor) testLimit.getEditor();
        JFormattedTextField textField = editor.getTextField();
        NumberFormatter formatter = (NumberFormatter) textField.getFormatter();
        formatter.setAllowsInvalid(false);  // Không cho phép nhập ký tự không hợp lệ
        formatter.setCommitsOnValidEdit(true); // Tự động cập nhật khi nhập số hợp lệ
        jDateChooser1.setDateFormatString("dd/MM/yyyy");
        jDateChooser1.getDateEditor().setEnabled(false);
        // Lấy JTextField từ JDateChooser
        JTextField dateTextField = ((JTextField) jDateChooser1.getDateEditor().getUiComponent());

        // Áp dụng bo góc cho JTextField bên trong JDateChooser
        dateTextField.putClientProperty(FlatClientProperties.STYLE, "arc: 10;");
        // Lấy nút chọn ngày (JButton)
        JButton calendarButton = (JButton) jDateChooser1.getCalendarButton();

        // Tuỳ chỉnh nút chọn ngày
        calendarButton.putClientProperty(FlatClientProperties.STYLE, "arc: 10; background: #3276c3; foreground: #ffffff;");
        calendarButton.setIcon(new FlatSVGIcon("icons/calendar.svg", 30, 30));  // Đổi icon thành emoji lịch (hoặc setIcon)
        calendarButton.setFocusPainted(false);
        calendarButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jPanel1.putClientProperty(FlatClientProperties.STYLE, "arc: 10; background: #ffffff");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel9.setText("Số câu dễ:");

        testLimit1.putClientProperty(FlatClientProperties.STYLE, "arc :10;");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel10.setText("Số câu khó:");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel11.setText("Số câu trung bình:");

        testLimit2.putClientProperty(FlatClientProperties.STYLE, "arc :10;");

        testLimit3.putClientProperty(FlatClientProperties.STYLE, "arc :10;");

        monhocCBB.putClientProperty(FlatClientProperties.PLACEHOLDER_TEXT, "Danh sách môn học");
        monhocCBB.putClientProperty(FlatClientProperties.STYLE, "arc: 10; ");
        cbb_child.setEditable(true);
        cbb_child.setToolTipText("");
        cbb_child.setName(""); // NOI18N
        cbb_child.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbb_childActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel7.setText("Chọn chủ đề");

        luu1.putClientProperty(FlatClientProperties.STYLE, "arc: 10; background: #0bae1d; foreground: #ffffff;");
        luu1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        luu1.setIcon(new FlatSVGIcon("icons/eye.svg", 30, 30)
        );
        luu1.setText("Xem trước");
        luu1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        luu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                luu1ActionPerformed(evt);
            }
        });

        jLabel6.setText("Tổng số câu:");

        totalQuestion.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        totalQuestion.setText("0");

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jLabel13.setText("Số lượng đề thi (A, B, C, D, E,. . . . . .)");

        quantityExams.putClientProperty(FlatClientProperties.STYLE, "arc :10;");

        luu2.putClientProperty(FlatClientProperties.STYLE, "arc: 10; background: #3276c3; foreground: #ffffff;");
        luu2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        luu2.setIcon(new FlatSVGIcon("icons/next.svg", 30, 30)
        );
        luu2.setText("Chọn tiếp");
        luu2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        luu2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                luu2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(testLimit1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel9))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(testLimit2, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel11)))
                                .addComponent(cbb_child, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(quantityExams, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(testLimit3, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(totalQuestion, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel13)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(luu1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(luu2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbb_child, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quantityExams, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel11)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(testLimit1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(testLimit2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(testLimit3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(totalQuestion))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(luu1)
                    .addComponent(luu2))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        // Định dạng lại phần nhập số (loại bỏ dấu phân cách)
        JSpinner.DefaultEditor editor3 = (JSpinner.DefaultEditor) testLimit.getEditor();
        JFormattedTextField textField3 = editor3.getTextField();
        NumberFormatter formatter3 = (NumberFormatter) textField3.getFormatter();
        formatter3.setAllowsInvalid(false);  // Không cho phép nhập ký tự không hợp lệ
        formatter3.setCommitsOnValidEdit(true); // Tự động cập nhật khi nhập số hợp lệ
        // Định dạng lại phần nhập số (loại bỏ dấu phân cách)
        JSpinner.DefaultEditor editor4 = (JSpinner.DefaultEditor) testLimit.getEditor();
        JFormattedTextField textField4 = editor4.getTextField();
        NumberFormatter formatter4 = (NumberFormatter) textField4.getFormatter();
        formatter4.setAllowsInvalid(false);  // Không cho phép nhập ký tự không hợp lệ
        formatter4.setCommitsOnValidEdit(true); // Tự động cập nhật khi nhập số hợp lệ
        // Định dạng lại phần nhập số (loại bỏ dấu phân cách)
        JSpinner.DefaultEditor editor5 = (JSpinner.DefaultEditor) testLimit.getEditor();
        JFormattedTextField textField5 = editor5.getTextField();
        NumberFormatter formatter5 = (NumberFormatter) textField5.getFormatter();
        formatter5.setAllowsInvalid(false);  // Không cho phép nhập ký tự không hợp lệ
        formatter5.setCommitsOnValidEdit(true); // Tự động cập nhật khi nhập số hợp lệ
        // Kích hoạt AutoComplete
        AutoCompleteDecorator.decorate(cbb_child);
        monhocCBB.setMaximumRowCount(5);
        // Định dạng lại phần nhập số (loại bỏ dấu phân cách)
        JSpinner.DefaultEditor editor1 = (JSpinner.DefaultEditor) quantityExams.getEditor();
        JFormattedTextField textField1 = editor1.getTextField();
        NumberFormatter formatter1 = (NumberFormatter) textField1.getFormatter();
        formatter1.setAllowsInvalid(false);  // Không cho phép nhập ký tự không hợp lệ
        formatter1.setCommitsOnValidEdit(true); // Tự động cập nhật khi nhập số hợp lệ

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents
    private void monhocCBBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monhocCBBActionPerformed
         // TODO add your handling code here:
        String selectedTopic = (String) monhocCBB.getSelectedItem();
        Integer selectedID = topicMapParent.get(selectedTopic);

        if (selectedID != null) {
            loadTpChildren(selectedID);
            idTopicParent = selectedID;
            if (idTopicParent != -1) {
                monhocCBB.setEnabled(false);
                jButton16.setIcon(new FlatSVGIcon("icons/lock.svg", 30, 30));
            }
        }
    }//GEN-LAST:event_monhocCBBActionPerformed


    private void luuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_luuActionPerformed

    }//GEN-LAST:event_luuActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        if (idTopicParent == -1) {
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(
                null,
                "Đổi chủ đề sẽ xoá tất cả câu hỏi đã chọn!\nBạn có muốn đổi chủ đề?",
                "Xác nhận",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE
        );

        if (confirm == JOptionPane.YES_OPTION) {
            jButton16.setIcon(new FlatSVGIcon("icons/unlock.svg", 30, 30));
            monhocCBB.setEnabled(true);
            monhocCBB.setSelectedIndex(0);
            idTopicParent = -1;
            totalQuestion.setText(listQSelected.size() + "");
        }

    }//GEN-LAST:event_jButton16ActionPerformed

    private void cbb_childActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbb_childActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbb_childActionPerformed

    private void luu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_luu1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_luu1ActionPerformed

    private void luu2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_luu2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_luu2ActionPerformed

    private void loadTpParent() {
        topicMapParent.clear();
        topicMapParent.put("--None--", -1);

        for (TopicDTO t : tpBUS.getAll()) {
            topicMapParent.put(t.getTpTitle(), t.getTpID());
        }

        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();

        for (String s : topicMapParent.keySet()) {
            model.addElement(s);
        }
        monhocCBB.setModel(model);
    }

    private void loadTpChildren(int idParent) {
        topicMapChildren.clear();
        topicMapChildren.put("--None--", -1);
        for (TopicDTO t : tpBUS.getAllChildTopics(idParent)) {
            topicMapChildren.put(t.getTpTitle(), t.getTpID());
        }

        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();

        for (String s : topicMapChildren.keySet()) {
            model.addElement(s);
        }
        cbb_child.setModel(model);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbb_child;
    private javax.swing.JButton jButton16;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JButton luu;
    private javax.swing.JButton luu1;
    private javax.swing.JButton luu2;
    private javax.swing.JComboBox<String> monhocCBB;
    private javax.swing.JSpinner quantityExams;
    private javax.swing.JTextField testCode;
    private javax.swing.JSpinner testLimit;
    private javax.swing.JSpinner testLimit1;
    private javax.swing.JSpinner testLimit2;
    private javax.swing.JSpinner testLimit3;
    private javax.swing.JTextField testTime;
    private javax.swing.JTextField testTitle;
    private javax.swing.JButton time;
    private javax.swing.JLabel totalQuestion;
    // End of variables declaration//GEN-END:variables
}
